{"version":3,"sources":["helpers/urls.js","helpers/utils.js","actions/auth.js","actions/actionTypes.js","actions/posts.js","components/PostsList.js","actions/search.js","components/Navbar.js","components/Home.js","components/Page404.js","components/Login.js","components/Signup.js","components/Settings.js","actions/profile.js","actions/friends.js","components/UserProfile.js","components/FriendsList.js","components/FriendsListItem.js","components/CreatePost.js","components/Post.js","components/Comment.js","components/Chat.js","components/App.js","reducers/auth.js","reducers/profile.js","reducers/friends.js","reducers/search.js","reducers/index.js","reducers/posts.js","index.js","store/index.js"],"names":["API_ROOT","APIUrls","page","limit","userId","id","likeType","searchText","getFormBody","params","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","getAuthTokenFromLocalStorage","localStorage","getItem","signup","email","password","confirmPassword","name","dispatch","url","fetch","method","headers","body","confirm_password","then","response","json","data","success","setItem","token","user","type","error","message","fetchPosts","console","log","posts","createComment","content","postId","Authorization","post_id","comment","addComment","addLike","addLikeToStore","PostsList","this","props","className","map","post","key","_id","Component","searchUsers","repsonse","searchResultsSuccess","users","Navbar","logOut","removeItem","handleSearch","e","target","value","auth","results","to","src","alt","placeholder","onChange","length","isLoggedin","onClick","React","connect","state","search","Home","friends","Page404","Login","handleEmailChange","setState","handlePasswordChange","handleFormSubmit","preventDefault","login","inProgress","from","location","pathname","required","disabled","Signup","handleInputChange","field","onFormSubmit","Settings","handleChange","fieldName","val","handleSave","editUser","editMode","fetchUserProfile","fetchUserFriends","UserProfile","checkIfUserIsAFriend","match","friend","to_user","indexOf","handleAddFriendClick","a","options","successMessage","friendship","handleRemoveFriendClick","extra","prevProps","prevParams","currentParams","profile","isUserAFriend","FriendsList","FriendsListItem","CreatePost","handleOnClick","Post","handleAddComment","handleOnCommentChange","handlePostLike","isPostLikedByUser","likes","includes","comments","onKeyPress","Comment","Chat","setupConnections","socketConnection","socket","self","on","emit","user_email","userEmail","chatroom","messages","messageObject","typedMessage","handleSubmit","io","height","Date","now","PrivateRoute","privateRouteProps","path","component","render","App","jwtDecode","authenticateUser","exact","initialAuthState","initalProfileState","defaultProfileState","initialSearchState","combineReducers","action","newPosts","updatedPosts","concat","newArr","filter","store","createStore","reducer","applyMiddleware","thunk","logger","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c396a302.chunk.js","sourcesContent":["const API_ROOT = 'http://codeial.com:8000/api/v2';\r\n\r\nexport const APIUrls = {\r\n  login: () => `${API_ROOT}/users/login`,\r\n  signup: () => `${API_ROOT}/users/signup`,\r\n  editProfile: () => `${API_ROOT}/users/edit`,\r\n  fetchPosts: (page = 1, limit = 25) =>\r\n    `${API_ROOT}/posts?page=${page}&limit=${limit}`,\r\n  userProfile: (userId) => `${API_ROOT}/users/${userId}`,\r\n  userFriends: () => `${API_ROOT}/friendship/fetch_user_friends`,\r\n  addFriend: (userId) =>\r\n    `${API_ROOT}/friendship/create_friendship?user_id=${userId}`,\r\n  removeFriend: (userId) =>\r\n    `${API_ROOT}/friendship/remove_friendship?user_id=${userId}`,\r\n  createPost: () => `${API_ROOT}/posts/create`,\r\n  createComment: () => `${API_ROOT}/comments/`,\r\n  toggleLike: (id, likeType) =>\r\n    `${API_ROOT}/likes/toggle?likeable_id=${id}&likeable_type=${likeType}`,\r\n  userSearch: (searchText) => `${API_ROOT}/users/search?text=${searchText}`,\r\n};\r\n","export function getFormBody(params) {\r\n  let formBody = [];\r\n\r\n  for (let property in params) {\r\n    let encodedKey = encodeURIComponent(property); // 'user name' => 'user%20name'\r\n    let encodedValue = encodeURIComponent(params[property]); // aakash 123 => aakash%2020123\r\n\r\n    formBody.push(encodedKey + '=' + encodedValue);\r\n  }\r\n\r\n  return formBody.join('&'); // 'username=aakash&password=123213'\r\n}\r\n\r\nexport function getAuthTokenFromLocalStorage() {\r\n  return localStorage.getItem('token');\r\n}","import {\r\n  LOGIN_START,\r\n  LOGIN_FAILED,\r\n  LOGIN_SUCCESS,\r\n  SIGNUP_START,\r\n  SIGNUP_FAILED,\r\n  SIGNUP_SUCCESS,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_USER_SUCCESSFUL,\r\n  EDIT_USER_FAILED,\r\n} from './actionTypes';\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getFormBody , getAuthTokenFromLocalStorage} from '../helpers/utils';\r\n\r\nexport function startLogin() {\r\n  return {\r\n    type: LOGIN_START,\r\n  };\r\n}\r\n\r\nexport function loginFailed(errorMessage) {\r\n  return {\r\n    type: LOGIN_FAILED,\r\n    error: errorMessage,\r\n  };\r\n}\r\n\r\nexport function loginSuccess(user) {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function login(email, password) {\r\n  return (dispatch) => {\r\n    dispatch(startLogin());\r\n    const url = APIUrls.login();\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: getFormBody({ email, password }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('data', data);\r\n        if (data.success) {\r\n          localStorage.setItem('token', data.data.token);\r\n          // dispatch action to save user\r\n          dispatch(loginSuccess(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(loginFailed(data.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function authenticateUser(user) {\r\n  return {\r\n    type: AUTHENTICATE_USER,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  return {\r\n    type: LOG_OUT,\r\n  };\r\n}\r\n\r\n\r\n\r\nexport function signup(email, password, confirmPassword, name) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.signup();\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: getFormBody({\r\n        email,\r\n        password,\r\n        confirm_password: confirmPassword,\r\n        name,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // console.log('data', data);\r\n        if (data.success) {\r\n          // do something\r\n          localStorage.setItem('token', data.data.token);\r\n          dispatch(signupSuccessful(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(signupFailed(data.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function startSignup() {\r\n  return {\r\n    type: SIGNUP_START,\r\n  };\r\n}\r\n\r\nexport function signupFailed(error) {\r\n  return {\r\n    type: SIGNUP_FAILED,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function signupSuccessful(user) {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function clearAuthState() {\r\n  return {\r\n    type: CLEAR_AUTH_STATE\r\n  };\r\n}\r\n\r\nexport function editUserSuccessful(user) {\r\n  return {\r\n    type: EDIT_USER_SUCCESSFUL,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function editUserFailed(error) {\r\n  return {\r\n    type: EDIT_USER_FAILED,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function editUser(name, password, confirmPassword, userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.editProfile();\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n      body: getFormBody({\r\n        name,\r\n        password,\r\n        confirm_password: confirmPassword,\r\n        id: userId,\r\n      }),\r\n    })\r\n      .then((repsonse) => repsonse.json())\r\n      .then((data) => {\r\n        console.log('data', data);\r\n        if (data.success) {\r\n          dispatch(editUserSuccessful(data.data.user));\r\n\r\n          if (data.data.token) {\r\n            localStorage.setItem('token', data.data.token);\r\n          }\r\n          return;\r\n        }\r\n\r\n        dispatch(editUserFailed(data.message));\r\n      });\r\n  };\r\n}","export const UPDATE_POSTS = 'UPDATE_POSTS';\r\n\r\n// login action types\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\n\r\n// signup\r\nexport const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED';\r\nexport const CLEAR_AUTH_STATE = 'CLEAR_AUTH_STATE';\r\n\r\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\nexport const EDIT_USER_SUCCESSFUL = 'EDIT_USER_SUCCESSFUL';\r\nexport const EDIT_USER_FAILED = 'EDIT_USER_FAILED';\r\n\r\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS';\r\nexport const USER_PROFILE_FAILURE = 'USER_PROFILE_FAILURE';\r\nexport const FETCH_USER_PROFILE = 'FETCH_USER_PROFILE';\r\n\r\n// friends\r\nexport const FETCH_FRIENDS_SUCCESS = 'FETCH_FRIENDS_SUCCESS';\r\nexport const ADD_FRIEND = 'ADD_FRIEND';\r\nexport const REMOVE_FRIEND = 'REMOVE_FRIEND';\r\n\r\n//post\r\nexport const ADD_POST = 'ADD_POST';\r\n//comment\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\n//Like\r\nexport const UPDATE_POST_LIKE = 'UPDATE_POST_LIKE';\r\n// search\r\nexport const FETCH_SEARCH_RESULTS_SUCCESS = 'FETCH_SEARCH_RESULTS_SUCCESS';","import {\r\n  UPDATE_POSTS,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  UPDATE_POST_LIKE,\r\n} from './actionTypes';\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage, getFormBody } from '../helpers/utils';\r\n\r\n\r\nexport function fetchPosts() {\r\n  return (dispatch) => {\r\n    const url = APIUrls.fetchPosts();\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch(updatePosts(data.data.posts));\r\n      });\r\n  };\r\n}\r\n\r\nexport function updatePosts(posts) {\r\n  return {\r\n    type: UPDATE_POSTS,\r\n    posts,\r\n  };\r\n}\r\n\r\nexport function addPost(post) {\r\n  return {\r\n    type: ADD_POST,\r\n    post,\r\n  };\r\n}\r\n\r\nexport function createPost(content) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.createPost();\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n      body: getFormBody({ content }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('data', data);\r\n\r\n        if (data.success) {\r\n          dispatch(addPost(data.data.post));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function createComment(content, postId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.createComment();\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n      body: getFormBody({ content, post_id: postId }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(addComment(data.data.comment, postId));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function addComment(comment, postId) {\r\n  return {\r\n    type: ADD_COMMENT,\r\n    comment,\r\n    postId,\r\n  };\r\n}\r\n\r\nexport function addLike(id, likeType, userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.toggleLike(id,likeType);\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('LIKE DATA', data);\r\n\r\n        if (data.success) {\r\n          dispatch(addLikeToStore(id, userId));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function addLikeToStore(postId, userId) {\r\n  return {\r\n    type: UPDATE_POST_LIKE,\r\n    postId,\r\n    userId,\r\n  };\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CreatePost, Post } from './';\r\n\r\nclass PostsList extends Component {\r\n  render() {\r\n    const { posts } = this.props;\r\n    return (\r\n      <div className=\"posts-list\">\r\n        <CreatePost />\r\n        {posts.map((post) => (\r\n          <Post post={post} key={post._id} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostsList.propTypes = {\r\n    posts: PropTypes.array.isRequired\r\n}\r\n\r\nexport default PostsList;\r\n","import { FETCH_SEARCH_RESULTS_SUCCESS } from './actionTypes';\r\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\r\nimport { APIUrls } from '../helpers/urls';\r\n\r\nexport function searchUsers(searchText) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.userSearch(searchText);\r\n\r\n    fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((repsonse) => repsonse.json())\r\n      .then((data) => {\r\n        console.log('SEARCH data', data);\r\n        if (data.success) {\r\n          dispatch(searchResultsSuccess(data.data.users));\r\n        } else {\r\n          dispatch(searchResultsSuccess([]));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function searchResultsSuccess(users) {\r\n  return {\r\n    type: FETCH_SEARCH_RESULTS_SUCCESS,\r\n    users,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { logoutUser } from '../actions/auth';\r\nimport { searchUsers } from '../actions/search';\r\n\r\nclass Navbar extends React.Component {\r\n  logOut = () => {\r\n    localStorage.removeItem('token');\r\n    this.props.dispatch(logoutUser());\r\n  };\r\n\r\n  handleSearch = (e) => {\r\n    const searchText = e.target.value;\r\n\r\n    this.props.dispatch(searchUsers(searchText));\r\n  };\r\n\r\n  render() {\r\n    const { auth, results } = this.props;\r\n    return (\r\n      <nav className=\"nav\">\r\n        <div className=\"left-div\">\r\n          <Link to=\"/\">\r\n            <img\r\n              src=\"https://ninjasfiles.s3.amazonaws.com/0000000000003454.png\"\r\n              alt=\"logo\"\r\n            />\r\n          </Link>\r\n        </div>\r\n        <div className=\"search-container\">\r\n          <img\r\n            className=\"search-icon\"\r\n            src=\"https://image.flaticon.com/icons/svg/483/483356.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n          <input placeholder=\"Search\" onChange={this.handleSearch} />\r\n\r\n          {results.length > 0 && (\r\n            <div className=\"search-results\">\r\n              <ul>\r\n                {results.map((user) => (\r\n                  <li className=\"search-results-row\" key={user._id}>\r\n                    <Link to={`/user/${user._id}`}>\r\n                      <img\r\n                        src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                        alt=\"user-dp\"\r\n                      />\r\n                      <span>{user.name}</span>\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"right-nav\">\r\n          {auth.isLoggedin && (\r\n            <div className=\"user\">\r\n              <Link to=\"/settings\">\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                  alt=\"user-dp\"\r\n                  id=\"user-dp\"\r\n                />\r\n              </Link>\r\n              <span>{auth.user.name}</span>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"nav-links\">\r\n            <ul>\r\n              {!auth.isLoggedin && (\r\n                <li>\r\n                  <Link to=\"/login\">Log in</Link>\r\n                </li>\r\n              )}\r\n\r\n              {auth.isLoggedin && <li onClick={this.logOut}>Log out</li>}\r\n\r\n              {!auth.isLoggedin && (\r\n                <li>\r\n                  <Link to=\"/signup\">Register</Link>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n    results: state.search.results,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","import React, { Component } from 'react';\r\nimport { PostsList, FriendsList, Chat } from './';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const { posts, friends, isLoggedin} = this.props;\r\n    return (\r\n      <div className=\"home\">\r\n        <PostsList posts={posts} />\r\n        {isLoggedin && <FriendsList friends={friends} />}\r\n        {isLoggedin && <Chat />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nfunction Page404(props) {\r\n  return (\r\n    <div>\r\n      <h1>404: Nothing found here!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page404;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { login, clearAuthState } from '../actions/auth';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //this.emailInputRef = React.createRef();\r\n    //this.passwordInputRef = React.createRef();\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n\r\n  handlePasswordChange = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log('this.emailInputRef', this.emailInputRef);\r\n    //console.log('this.passwordInputRef', this.passwordInputRef);\r\n    console.log('this.state', this.state);\r\n\r\n    const { email, password } = this.state;\r\n\r\n    if (email && password) {\r\n      this.props.dispatch(login(email, password));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { error, inProgress, isLoggedin } = this.props.auth;\r\n    const { from } = this.props.location.state || { from: { pathname: '/' } };\r\n    if (isLoggedin) {\r\n      return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n      <form className=\"login-form\">\r\n        <span className=\"login-signup-header\">Log In</span>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            //ref={this.emailInputRef}\r\n            onChange={this.handleEmailChange}\r\n            value={this.state.email}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            //ref={this.passwordInputRef}\r\n            onChange={this.handlePasswordChange}\r\n            value={this.state.password}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          {inProgress ? (\r\n            <button onClick={this.handleFormSubmit} disabled={inProgress}>\r\n              Logging in...\r\n            </button>\r\n          ) : (\r\n            <button onClick={this.handleFormSubmit} disabled={inProgress}>\r\n              Log In\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { startSignup, signup , clearAuthState } from '../actions/auth';\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: '',\r\n      confirmPassword: '',\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState({\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password, confirmPassword, name } = this.state;\r\n\r\n    if (email && password && confirmPassword && name) {\r\n      this.props.dispatch(startSignup());\r\n      this.props.dispatch(signup(email, password, confirmPassword, name));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { inProgress, error, isLoggedin } = this.props.auth;\r\n    \r\n    if (isLoggedin) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    \r\n    return (\r\n      <form className=\"login-form\">\r\n        <span className=\"login-signup-header\"> Signup</span>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Name\"\r\n            type=\"text\"\r\n            required\r\n            onChange={(e) => this.handleInputChange('name', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            required\r\n            onChange={(e) => this.handleInputChange('email', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) => this.handleInputChange('password', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Confirm password\"\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) =>\r\n              this.handleInputChange('confirmPassword', e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <button onClick={this.onFormSubmit} disabled={inProgress}>\r\n            Signup\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Signup);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editUser, clearAuthState } from '../actions/auth';\r\n\r\nclass Settings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: props.auth.user.name,\r\n      password: '',\r\n      confirmPassword: '',\r\n      editMode: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (fieldName, val) => {\r\n    this.setState({\r\n      [fieldName]: val,\r\n    });\r\n  };\r\n\r\n  handleSave = () => {\r\n    const { password, confirmPassword, name } = this.state;\r\n    const { user } = this.props.auth;\r\n\r\n    this.props.dispatch(editUser(name, password, confirmPassword, user._id));\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n  \r\n  render() {\r\n    const { user , error } = this.props.auth;\r\n    const { editMode } = this.state;\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"img-container\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-dp\"\r\n          />\r\n        </div>\r\n\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        {error === false && (\r\n          <div className=\"alert success-dailog\">\r\n            Successfully updated profile!\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Email</div>\r\n          <div className=\"field-value\">{user.email}</div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Name</div>\r\n          {editMode ? (\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => this.handleChange('name', e.target.value)}\r\n              value={this.state.name}\r\n            />\r\n          ) : (\r\n            <div className=\"field-value\">{user.name}</div>\r\n          )}\r\n        </div>\r\n\r\n        {editMode && (\r\n          <div className=\"field\">\r\n            <div className=\"field-label\">New password</div>\r\n\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) => this.handleChange('password', e.target.value)}\r\n              value={this.state.password}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {editMode && (\r\n          <div className=\"field\">\r\n            <div className=\"field-label\">Confirm password</div>\r\n\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) =>\r\n                this.handleChange('confirmPassword', e.target.value)\r\n              }\r\n              value={this.state.confirmPassword}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"btn-grp\">\r\n          {editMode ? (\r\n            <button className=\"button save-btn\" onClick={this.handleSave}>\r\n              Save\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"button edit-btn\"\r\n              onClick={() => this.handleChange('editMode', true)}\r\n            >\r\n              Edit profile\r\n            </button>\r\n          )}\r\n\r\n          {editMode && (\r\n            <div\r\n              className=\"go-back\"\r\n              onClick={() => this.handleChange('editMode', false)}\r\n            >\r\n              Go back\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Settings);\r\n","import {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILURE,\r\n  FETCH_USER_PROFILE,\r\n} from './actionTypes';\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\r\n\r\nexport function startUserProfileFetch() {\r\n  return {\r\n    type: FETCH_USER_PROFILE,\r\n  };\r\n}\r\n\r\nexport function userProfileSuccess(user) {\r\n  return {\r\n    type: USER_PROFILE_SUCCESS,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function userProfileFailed(error) {\r\n  return {\r\n    type: USER_PROFILE_FAILURE,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function fetchUserProfile(userId) {\r\n  return (dispatch) => {\r\n    dispatch(startUserProfileFetch());\r\n\r\n    const url = APIUrls.userProfile(userId);\r\n    fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch(userProfileSuccess(data.data.user));\r\n      });\r\n  };\r\n}\r\n","import { APIUrls } from '../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\r\nimport {\r\n  FETCH_FRIENDS_SUCCESS,\r\n  ADD_FRIEND,\r\n  REMOVE_FRIEND,\r\n} from './actionTypes';\r\n\r\nexport function fetchUserFriends(userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.userFriends(userId);\r\n    fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('data', data);\r\n        dispatch(fetchFriendsSucces(data.data.friends));\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchFriendsSucces(friends) {\r\n  return {\r\n    type: FETCH_FRIENDS_SUCCESS,\r\n    friends,\r\n  };\r\n}\r\n\r\nexport function addFriend(friend) {\r\n  return {\r\n    type: ADD_FRIEND,\r\n    friend,\r\n  };\r\n}\r\n\r\nexport function removeFriend(userId) {\r\n  return {\r\n    type: REMOVE_FRIEND,\r\n    userId,\r\n  };\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUserProfile } from '../actions/profile';\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\r\nimport { addFriend, removeFriend } from '../actions/friends';\r\n\r\n\r\n\r\nclass UserProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      success: null,\r\n      error: null,\r\n      successMessage: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n\r\n    if (match.params.userId) {\r\n      // dispatch an action\r\n      this.props.dispatch(fetchUserProfile(match.params.userId));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      match: { params: prevParams },\r\n    } = prevProps;\r\n\r\n    const {\r\n      match: { params: currentParams },\r\n    } = this.props;\r\n\r\n    if (\r\n      prevParams &&\r\n      currentParams &&\r\n      prevParams.userId !== currentParams.userId\r\n    ) {\r\n      this.props.dispatch(fetchUserProfile(currentParams.userId));\r\n    }\r\n  }\r\n\r\n  checkIfUserIsAFriend = () => {\r\n    console.log('this.props', this.props);\r\n    const { match, friends } = this.props;\r\n    const userId = match.params.userId;\r\n\r\n    const index = friends.map((friend) => friend.to_user._id).indexOf(userId);\r\n\r\n    if (index !== -1) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  handleAddFriendClick = async () => {\r\n    const userId = this.props.match.params.userId;\r\n    const url = APIUrls.addFriend(userId);\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    };\r\n\r\n    const response = await fetch(url, options);\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n      this.setState({\r\n        success: true,\r\n        successMessage: 'Added friend successfully!',\r\n      });\r\n\r\n      this.props.dispatch(addFriend(data.data.friendship));\r\n    } else {\r\n      this.setState({\r\n        success: null,\r\n        error: data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRemoveFriendClick = async () => {\r\n    const { match } = this.props;\r\n    const url = APIUrls.removeFriend(match.params.userId);\r\n\r\n    const extra = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    };\r\n\r\n    const response = await fetch(url, extra);\r\n    const data = await response.json();\r\n    console.log('await data', data);\r\n\r\n    if (data.success) {\r\n      // show user message\r\n      this.setState({\r\n        success: true,\r\n        successMessage: 'Removed friends successfully!',\r\n      });\r\n      this.props.dispatch(removeFriend(match.params.userId));\r\n    } else {\r\n      this.setState({\r\n        success: null,\r\n        error: data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      match: { params },\r\n      profile,\r\n    } = this.props;\r\n    console.log('this.props', params);\r\n    const user = profile.user;\r\n\r\n    if (profile.inProgress) {\r\n      return <h1>Loading...!!!</h1>;\r\n    }\r\n\r\n    const isUserAFriend = this.checkIfUserIsAFriend();\r\n\r\n    const { success, error, successMessage } = this.state;\r\n\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"img-container\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-dp\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Name</div>\r\n          <div className=\"field-value\">{user.name}</div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Email</div>\r\n          <div className=\"field-value\">{user.email}</div>\r\n        </div>\r\n\r\n        <div className=\"btn-grp\">\r\n          {!isUserAFriend ? (\r\n            <button\r\n              className=\"button save-btn\"\r\n              onClick={this.handleAddFriendClick}\r\n            >\r\n              Add Friend\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"button save-btn\"\r\n              onClick={this.handleRemoveFriendClick}\r\n            >\r\n              Remove Friend\r\n            </button>\r\n          )}\r\n\r\n          {success && (\r\n            <div className=\"alert success-dailog\">{successMessage}</div>\r\n          )}\r\n          {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ profile, friends }) {\r\n  return {\r\n    profile,\r\n    friends,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(UserProfile);\r\n","import React from 'react';\r\nimport { FriendsListItem } from './';\r\n\r\nconst FriendsList = (props) => {\r\n  return (\r\n    <div className=\"friends-list\">\r\n      <div className=\"header\">Friends</div>\r\n\r\n      {props.friends && props.friends.length === 0 && (\r\n        <div className=\"no-friends\">No friends found!</div>\r\n      )}\r\n\r\n      {props.friends &&\r\n        props.friends.map((friend) => (\r\n          <FriendsListItem friend={friend.to_user} key={friend._id} />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendsList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction FriendsListItem(props) {\r\n  return (\r\n    <div>\r\n      <Link className=\"friends-item\" to={`user/${props.friend._id}`}>\r\n        <div className=\"friends-img\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-pic\"\r\n          />\r\n        </div>\r\n        <div className=\"friends-name\">{props.friend.email}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendsListItem;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createPost } from '../actions/posts';\r\n\r\nclass CreatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: '',\r\n    };\r\n  }\r\n\r\n  handleOnClick = () => {\r\n    // dispatch action\r\n    this.props.dispatch(createPost(this.state.content));\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      content: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"create-post\">\r\n        <textarea\r\n          className=\"add-post\"\r\n          value={this.state.content}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <div>\r\n          <button id=\"add-post-btn\" onClick={this.handleOnClick}>\r\n            Add Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(CreatePost);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Comment } from './';\r\nimport { createComment, addLike } from '../actions/posts';\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      comment: '',\r\n    };\r\n  }\r\n  handleAddComment = (e) => {\r\n    const { comment } = this.state;\r\n    const { post } = this.props;\r\n\r\n    if (e.key === 'Enter') {\r\n      this.props.dispatch(createComment(comment, post._id));\r\n\r\n      // clear comment\r\n      this.setState({\r\n        comment: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnCommentChange = (e) => {\r\n    this.setState({\r\n      comment: e.target.value,\r\n    });\r\n  };\r\n\r\n  handlePostLike = () => {\r\n    const { post, user } = this.props;\r\n    this.props.dispatch(addLike(post._id, 'Post', user._id));\r\n  };\r\n\r\n  render() {\r\n    const { post, user } = this.props;\r\n    const { comment } = this.state;\r\n\r\n     const isPostLikedByUser = post.likes.includes(user._id);\r\n\r\n    return (\r\n      <div className=\"post-wrapper\" key={post._id}>\r\n        <div className=\"post-header\">\r\n          <div className=\"post-avatar\">\r\n            <Link to={`/user/${post.user._id}`}>\r\n              <img\r\n                src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                alt=\"user-pic\"\r\n              />\r\n            </Link>\r\n            <div>\r\n              <span className=\"post-author\">{post.user.name}</span>\r\n              <span className=\"post-time\">a minute ago</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-content\">{post.content}</div>\r\n\r\n          <div className=\"post-actions\">\r\n            <button className=\"post-like no-btn\" onClick={this.handlePostLike}>\r\n              {isPostLikedByUser ? (\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/1076/1076984.svg\"\r\n                  alt=\"like post\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/1077/1077035.svg\"\r\n                  alt=\"likes-icon\"\r\n                />\r\n              )}\r\n              <span>{post.likes.length}</span>\r\n            </button>\r\n\r\n            <div className=\"post-comments-icon\">\r\n              <img\r\n                src=\"https://image.flaticon.com/icons/svg/1380/1380338.svg\"\r\n                alt=\"comments-icon\"\r\n              />\r\n              <span>{post.comments.length}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-comment-box\">\r\n            <input\r\n              placeholder=\"Start typing a comment\"\r\n              onChange={this.handleOnCommentChange}\r\n              onKeyPress={this.handleAddComment}\r\n              value={comment}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"post-comments-list\">\r\n            {post.comments.map((comment) => (\r\n              <Comment comment={comment} key={comment._id} postId={post._id} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    user: auth.user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Post);\r\n","import React from 'react';\r\n\r\nfunction Comment({ comment }) {\r\n  return (\r\n    <div className=\"post-comment-item\">\r\n      <div className=\"post-comment-header\">\r\n        <span className=\"post-comment-author\">{comment.user.name}</span>\r\n        <span className=\"post-comment-time\">a minute ago</span>\r\n        <span className=\"post-comment-likes\">{comment.likes.length} likes</span>\r\n      </div>\r\n\r\n      <div className=\"post-comment-content\">{comment.content}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","import React, { Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { connect } from 'react-redux';\r\nimport '../chat.css';\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messages: [], // {content: 'some message', self: true}\r\n      typedMessage: '',\r\n    };\r\n\r\n    this.socket = io.connect('http://54.237.158.65:5000');\r\n    this.userEmail = props.user.email;\r\n\r\n    if (this.userEmail) {\r\n      this.setupConnections();\r\n    }\r\n  }\r\n\r\n  setupConnections = () => {\r\n    const socketConnection = this.socket;\r\n    const self = this;\r\n\r\n    this.socket.on('connect', function () {\r\n      console.log('CONNECTION ESTABLISHED');\r\n\r\n      socketConnection.emit('join_room', {\r\n        user_email: this.userEmail,\r\n        chatroom: 'codeial',\r\n      });\r\n\r\n      socketConnection.on('user_joined', function (data) {\r\n        console.log('NEW USER JOINED', data);\r\n      });\r\n    });\r\n\r\n    this.socket.on('receive_message', function (data) {\r\n      // add message to state\r\n      const { messages } = self.state;\r\n      const messageObject = {};\r\n      messageObject.content = data.message;\r\n\r\n      if (data.user_email === self.userEmail) {\r\n        messageObject.self = true;\r\n      }\r\n\r\n      self.setState({\r\n        messages: [...messages, messageObject],\r\n        typedMessage: '',\r\n      });\r\n    });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { typedMessage } = this.state;\r\n\r\n    if (typedMessage && this.userEmail) {\r\n      this.socket.emit('send_message', {\r\n        message: typedMessage,\r\n        user_email: this.userEmail,\r\n        chatroom: 'codeial',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { typedMessage, messages} = this.state;\r\n\r\n    return (\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-header\">\r\n          Chat\r\n          <img\r\n            src=\"https://www.iconsdb.com/icons/preview/white/minus-5-xxl.png\"\r\n            alt=\"toggle\"\r\n            height={17}\r\n          />\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n          {messages.map((message) => (\r\n            <div\r\n              className={\r\n                message.self\r\n                  ? 'chat-bubble self-chat'\r\n                  : 'chat-bubble other-chat'\r\n              }\r\n              key={Date.now()}\r\n            >\r\n              {message.content}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-footer\">\r\n          <input\r\n            type=\"text\"\r\n            value={typedMessage}\r\n            onChange={(e) => this.setState({ typedMessage: e.target.value })}\r\n          />\r\n          <button onClick={this.handleSubmit}>Submit</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    user: auth.user,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Chat); \r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch , Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as jwtDecode from 'jwt-decode';\nimport { authenticateUser } from '../actions/auth';\n\nimport { fetchPosts } from '../actions/posts';\nimport { Home , Navbar, Page404 , Login , Signup , Settings , UserProfile} from './';\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\nimport { fetchUserFriends } from '../actions/friends';\n\nconst PrivateRoute = (privateRouteProps) => {\n  const { isLoggedin, path, component: Component } = privateRouteProps;\n\n  return (\n    <Route\n      path={path}\n      render={(props) => {\n        return isLoggedin ? (\n          <Component {...props} />\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: {\n                  from: props.location\n                },\n              }}\n            />\n          );\n      }}\n    />\n  );\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchPosts());\n\n\n    const token = getAuthTokenFromLocalStorage();\n\n    if (token) {\n      const user = jwtDecode(token);\n\n      console.log('user', user);\n      this.props.dispatch(\n        authenticateUser({\n          email: user.email,\n          _id: user._id,\n          name: user.name,\n        })\n      );\n\n      this.props.dispatch(fetchUserFriends());\n    }\n  }\n\n  render() {\n    const { posts, auth, friends } = this.props;\n    return (\n      <Router>\n        <div>\n          <Navbar />\n\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => {\n                return (\n                  <Home\n                    {...props}\n                    posts={posts}\n                    friends={friends}\n                    isLoggedin={auth.isLoggedin}\n                  />\n                );\n              }}\n            />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <PrivateRoute\n              path=\"/settings\"\n              component={Settings}\n              isLoggedin={auth.isLoggedin}\n            />\n            <PrivateRoute\n              path=\"/user/:userId\"\n              component={UserProfile}\n              isLoggedin={auth.isLoggedin}\n            />\n            <Route component={Page404} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts,\n    auth: state.auth,\n    friends: state.friends,\n  };\n}\n\nApp.propTypes = {\n  posts : PropTypes.array.isRequired\n}\n\nexport default connect(mapStateToProps)(App);\n","import {\r\n  LOGIN_START,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  SIGNUP_START,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILED,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_USER_SUCCESSFUL,\r\n  EDIT_USER_FAILED,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialAuthState = {\r\n  user: {},\r\n  error: null,\r\n  isLoggedin: false,\r\n  inProgress: false,\r\n};\r\n\r\nexport default function auth(state = initialAuthState, action) {\r\n  switch (action.type) {\r\n    case CLEAR_AUTH_STATE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case LOGIN_START:\r\n    case SIGNUP_START:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isLoggedin: true,\r\n        inProgress: false,\r\n        error: null,\r\n      };\r\n    case LOGIN_FAILED:\r\n    case SIGNUP_FAILED:\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    case AUTHENTICATE_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isLoggedin: true,\r\n      };\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        user: {},\r\n        isLoggedin: false,\r\n      };\r\n    case EDIT_USER_SUCCESSFUL:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        error: false,\r\n      };\r\n    case EDIT_USER_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILURE,\r\n  FETCH_USER_PROFILE,\r\n} from '../actions/actionTypes';\r\n\r\nconst initalProfileState = {\r\n  user: {},\r\n  error: null,\r\n  success: null,\r\n  inProgress: false,\r\n};\r\nexport default function profile(state = initalProfileState, action) {\r\n  switch (action.type) {\r\n    case USER_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        user: action.user,\r\n        inProgress: false,\r\n      };\r\n    case USER_PROFILE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        inProgress: false,\r\n      };\r\n    case FETCH_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_FRIENDS_SUCCESS,\r\n  ADD_FRIEND,\r\n  REMOVE_FRIEND,\r\n} from '../actions/actionTypes';\r\n\r\nconst defaultProfileState = [];\r\n\r\n// profile reducer\r\nexport default function friends(state = defaultProfileState, action) {\r\n  switch (action.type) {\r\n    case FETCH_FRIENDS_SUCCESS:\r\n      return [...action.friends];\r\n    case ADD_FRIEND:\r\n      return state.concat(action.friend);\r\n    case REMOVE_FRIEND:\r\n      const newArr = state.filter(\r\n        (friend) => friend.to_user._id !== action.userId\r\n      );\r\n      return newArr;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_SEARCH_RESULTS_SUCCESS } from '../actions/actionTypes';\r\n\r\nconst initialSearchState = {\r\n  results: [],\r\n};\r\n\r\nexport default function search(state = initialSearchState, action) {\r\n  switch (action.type) {\r\n    case FETCH_SEARCH_RESULTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        results: action.users,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport posts from './posts';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport friends from './friends';\r\nimport search from './search';\r\n\r\nexport default combineReducers({\r\n  posts,\r\n  auth,\r\n  profile,\r\n  friends,\r\n  search,\r\n});\r\n","import { UPDATE_POSTS, ADD_POST, ADD_COMMENT , UPDATE_POST_LIKE } from '../actions/actionTypes';\r\n\r\nexport default function posts(state = [],action) {\r\n  switch (action.type) {\r\n    case UPDATE_POSTS:\r\n      return action.posts;\r\n    case ADD_POST:\r\n      return [action.post, ...state];\r\n    case ADD_COMMENT:\r\n      const newPosts = state.map((post) => {\r\n        if (post._id === action.postId) {\r\n          return {\r\n            ...post,\r\n            comments: [action.comment, ...post.comments],\r\n          };\r\n        }\r\n\r\n        return post;\r\n      });\r\n      return newPosts;\r\n    case UPDATE_POST_LIKE:\r\n      const updatedPosts = state.map((post) => {\r\n        if (post._id === action.postId) {\r\n          return {\r\n            ...post,\r\n            likes: [...post.likes, action.userId],\r\n          };\r\n        }\r\n\r\n        return post;\r\n      });\r\n      return updatedPosts;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App';\nimport { configureStore } from './store';\n\nconst store = configureStore();\nconsole.log('store', store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n     <App />\n    </React.StrictMode>\n  </Provider>,  \n  document.getElementById('root')\n);\n\n\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport reducer from '../reducers';\r\n\r\nlet store;\r\n\r\nexport function configureStore() {\r\n  store = createStore(reducer, applyMiddleware(thunk, logger));\r\n\r\n  return store;\r\n}\r\n"],"sourceRoot":""}